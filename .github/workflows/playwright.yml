# ชื่อของ Workflow ที่จะแสดงในแท็บ Actions ของ GitHub
name: Playwright Tests

# ทริกเกอร์: กำหนดว่าจะให้ Workflow นี้ทำงานเมื่อไหร่
on:
  # ทำงานเมื่อมีการพุชโค้ดขึ้นไป
  push:
    branches: [ main ]
  # ทำงานเมื่อมีการเปิด Pull Request มาที่ branch 'main'
  pull_request:
    branches: [ main ]

jobs:
  test:
    # กำหนดเวลาหมดอายุของ Job ถ้าทำงานนานเกิน 30 นาทีให้ยกเลิก
    timeout-minutes: 30
    # กำหนด OS ที่จะใช้รัน (ใช้ Ubuntu เวอร์ชันล่าสุด)
    runs-on: ubuntu-latest

    steps:
    # 1. เช็คเอาท์โค้ดจาก Repository ของเรามาไว้ใน Runner (เครื่องเซิฟเวอร์ชั่วคราว)
    - uses: actions/checkout@v4

    # 2. ติดตั้ง Node.js เวอร์ชัน 20.x
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    # 3. ติดตั้ง Dependencies (ใช้ npm ci จะเร็วกว่าและปลอดภัยกว่า npm install ใน CI)
    - name: Install dependencies
      run: npm ci

    # 4. ติดตั้ง Browsers ที่ Playwright ต้องใช้ พร้อม Dependencies ของระบบ
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    # 5. รันเทสในโหมด "สร้าง/อัปเดต" Snapshot
    - name: Run Playwright tests and Update Snapshots
      run: npx playwright test --update-snapshots # <<< จุดสำคัญคือการเติม --update-snapshots ตรงนี้

    # 6. อัปโหลด Report ผลเทส
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    # 7. อัปโหลดโฟลเดอร์ snapshots ที่เพิ่งสร้างบน Linux
    - name: Upload Linux snapshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: linux-snapshots # ตั้งชื่อ artifact
        path: tests/ui/visual.spec.ts-snapshots/ # ระบุ path ของโฟลเดอร์ snapshot
